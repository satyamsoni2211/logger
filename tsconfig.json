{
    "compilerOptions": {
        "target": "ES5", /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
        "lib": [
            "ES2015",
            "DOM",
            "ScriptHost",
            "ES2015.Promise",
        ], /* Specify a set of bundled library declaration files that describe the target runtime environment. */
        "module": "commonjs", /* Specify what module code is generated. */
        "rootDir": "./src", /* Specify the root folder within your source files. */
        "baseUrl": "./src", /* Specify the base directory to resolve non-relative module names. */
        "declaration": false, /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
        "sourceMap": true, /* Create source map files for emitted JavaScript files. */
        "outDir": "lib", /* Specify an output folder for all emitted files. */
        "preserveConstEnums": true, /* Disable erasing 'const enum' declarations in generated code. */
        "allowSyntheticDefaultImports": true, /* Allow 'import x from y' when a module doesn't have a default export. */
        "esModuleInterop": true, /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
        "forceConsistentCasingInFileNames": true, /* Ensure that casing is correct in imports. */
        "strict": true, /* Enable all strict type-checking options. */
        "noImplicitAny": true, /* Enable error reporting for expressions and declarations with an implied 'any' type. */
        "strictNullChecks": true, /* When type checking, take into account 'null' and 'undefined'. */
        "strictPropertyInitialization": false, /* Check for class properties that are declared but not set in the constructor. */
        "exactOptionalPropertyTypes": true, /* Interpret optional property types as written, rather than adding 'undefined'. */
        "noImplicitOverride": true, /* Ensure overriding members in derived classes are marked with an override modifier. */
    },
    "include": [
        "src/**/*",
    ],
    "exclude": [
        "node_modules/",
        "src/**/*.spec.ts",
        "src/**/*.test.ts",
        "spec/**/*",
    ]
}