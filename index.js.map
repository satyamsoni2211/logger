{"version":3,"file":"index.js","sources":["lib/enums.js","lib/record.js","lib/time.js","lib/logger.js","lib/base_classes.js","lib/handler.js","lib/formatter.js","lib/utils.js"],"sourcesContent":["var Levels;\n(function (Levels) {\n    Levels[Levels[\"not_set\"] = 0] = \"not_set\";\n    Levels[Levels[\"debug\"] = 1] = \"debug\";\n    Levels[Levels[\"info\"] = 2] = \"info\";\n    Levels[Levels[\"warn\"] = 3] = \"warn\";\n    Levels[Levels[\"error\"] = 4] = \"error\";\n    Levels[Levels[\"critical\"] = 5] = \"critical\";\n})(Levels || (Levels = {}));\nvar LevelTags;\n(function (LevelTags) {\n    LevelTags[\"not_set\"] = \"NOT_SET\";\n    LevelTags[\"debug\"] = \"DEBUG\";\n    LevelTags[\"info\"] = \"INFO\";\n    LevelTags[\"warn\"] = \"WARN\";\n    LevelTags[\"error\"] = \"ERROR\";\n    LevelTags[\"critical\"] = \"CRITICAL\";\n})(LevelTags || (LevelTags = {}));\nexport { Levels, LevelTags };\n//# sourceMappingURL=enums.js.map","import moment from 'moment';\nimport { LevelTags } from './enums';\nexport class LogRecord {\n    event;\n    level;\n    levelNo;\n    extra;\n    context_key;\n    args = [];\n    time;\n    constructor(event, levelNo, level = LevelTags.debug, time, extra = {}, context_key = \"\", args = []) {\n        this.event = event;\n        this.level = level;\n        this.time = time;\n        this.extra = extra;\n        this.context_key = context_key;\n        this.args = args;\n        this.levelNo = levelNo;\n        this.getMessage = this.getMessage.bind(this);\n        this.getTimeInMilliseconds = this.getTimeInMilliseconds.bind(this);\n        this.getIsoFormatTime = this.getIsoFormatTime.bind(this);\n        this.getFormattedTime = this.getFormattedTime.bind(this);\n    }\n    getMessage() {\n        return this.event;\n    }\n    getTimeInMilliseconds() {\n        return this.time;\n    }\n    getIsoFormatTime() {\n        return moment.unix(this.time).toISOString();\n    }\n    getFormattedTime(format = \"YYYY-MM-DD HH:mm:ss ZZ\") {\n        return moment.unix(this.time).format(format);\n    }\n}\n//# sourceMappingURL=record.js.map","import Moment from 'moment';\n/**\n * Function to get current time in ISO format\n * @returns {string}\n */\nexport const current_iso_time = () => {\n    return Moment().toISOString();\n};\n/**\n * Function to get current time in unix timestamp\n * @returns {number}\n */\nexport const current_epoc = () => {\n    return Moment().unix();\n};\n/**\n * Function to get current time in unix timestamp in milliseconds\n * @returns {number}\n */\nexport const current_epoc_millis = () => {\n    return Moment().valueOf();\n};\n/**\n * Function to format the current time with user defined format\n * @param {string} format - Format of the datetime\n * @returns {string} formatted datetime\n */\nexport const custom_formatted = (format) => {\n    return Moment().format(format);\n};\n//# sourceMappingURL=time.js.map","import { Levels, LevelTags } from \"./enums\";\nimport { LogRecord } from \"./record\";\nimport { current_epoc } from \"./time\";\nclass Logger {\n    handlers = [];\n    /**\n     * property level for handler\n     * @type number\n     * @default 0\n     */\n    level = 0;\n    addHandler(handler) {\n        this.handlers.push(handler);\n    }\n    ;\n    /**\n     * Function to set log level\n     * @param {Levels} level: log level to set\n     */\n    setLevel(level) {\n        this.level = level;\n    }\n    ;\n    createRecord(event, levelNo, tag, time, props = {}) {\n        const record = new LogRecord(event, levelNo, tag, time, props);\n        return record;\n    }\n    handle(record) {\n        for (const handler of this.handlers) {\n            handler.emit(record);\n        }\n    }\n    ;\n    filter_record(current_level, log_level) {\n        return (current_level > Levels.not_set && current_level <= log_level) || (current_level === Levels.not_set);\n    }\n    /**\n     * Function to log message as info\n     * @param {String} message: message to be logged\n     * @param {object} props: extra parameters to support interpolation\n     * @returns\n     */\n    info(message, props = {}) {\n        if (this.filter_record(this.level, Levels.info)) {\n            const record = this.createRecord(message, Levels.info, LevelTags.info, current_epoc(), props);\n            this.handle(record);\n        }\n    }\n    ;\n    debug(message, props = {}) {\n        if (this.filter_record(this.level, Levels.debug)) {\n            const record = this.createRecord(message, Levels.debug, LevelTags.debug, current_epoc(), props);\n            this.handle(record);\n        }\n    }\n    warn(message, props = {}) {\n        if (this.filter_record(this.level, Levels.warn)) {\n            const record = this.createRecord(message, Levels.warn, LevelTags.warn, current_epoc(), props);\n            this.handle(record);\n        }\n    }\n    error(message, props = {}) {\n        if (this.filter_record(this.level, Levels.error)) {\n            const record = this.createRecord(message, Levels.error, LevelTags.error, current_epoc(), props);\n            this.handle(record);\n        }\n    }\n    critical(message, props = {}) {\n        if (this.filter_record(this.level, Levels.critical)) {\n            const record = this.createRecord(message, Levels.critical, LevelTags.critical, current_epoc(), props);\n            this.handle(record);\n        }\n    }\n}\nexport { Logger };\n//# sourceMappingURL=logger.js.map","/**\n * Abstract base class for Handler\n * Can be used to create a new Handler instance\n */\nclass BaseHandler {\n    formatter;\n    /**\n     * Level number corresponding to the log levle\n     * of handler. By default this is 1 (debug)\n     * This can be overridden by setLevel() method\n     * @type {number}\n     */\n    level;\n    /**\n     * constructor for Handler class\n     * by default it sets level to debug\n     */\n    constructor() {\n        this.level = 1;\n    }\n    /**\n     * Function to override the default formatter\n     * this is required as by default no formatter is set\n     * @param {FormatterInterfaceType} formatter - Formatter instance\n     * @returns {void}\n     */\n    setFormatter(formatter) {\n        this.formatter = formatter;\n    }\n    /**\n     * Function to override log level of\n     * handler class\n     * @param {number} level - Log level to override (1,5)\n     */\n    setLevel(level) {\n        this.level = level;\n    }\n    /**\n     * Filter function to check if handler needs to process the record\n     * or skip it based of its log level\n     * @param {number} level - Log level to check for filtering\n     * @returns {boolean}\n     */\n    filter(level) {\n        if (this.level <= level) {\n            return true;\n        }\n        return false;\n    }\n}\n/**\n * Abstract base class for Formatter\n * Can be used to create a new Formatter instance\n */\nclass BaseFormatter {\n    format(value) {\n        const m = this.formatRecord(value);\n        return m;\n    }\n}\nexport { BaseHandler, BaseFormatter };\n//# sourceMappingURL=base_classes.js.map","import axios from \"axios\";\nimport { BaseHandler } from \"./base_classes\";\nclass ConsoleHandler extends BaseHandler {\n    /**\n     * Function to fetch console handler corresponding to\n     * log level\n     * @param {string} level - Log level to fetch console handler\n     * @returns {Function}\n     */\n    getConsoleMethod(level) {\n        let method;\n        switch (level.toLowerCase()) {\n            case \"debug\":\n                method = console.debug;\n                break;\n            case \"info\":\n                method = console.info;\n                break;\n            case \"warn\":\n                method = console.warn;\n                break;\n            case \"critical\":\n                method = console.error;\n                break;\n            case \"error\":\n                method = console.error;\n                break;\n            default:\n                method = console.log;\n        }\n        return method;\n    }\n    /**\n     * @override\n     */\n    emit(record) {\n        if (this.filter(record.levelNo)) {\n            const message = this.formatter.format(record);\n            const method = this.getConsoleMethod(record.level);\n            method.call(this, message);\n        }\n    }\n    ;\n}\nclass StreamHandler extends BaseHandler {\n    /**\n     * Endpoint to post data to sumo logic\n     * @type {string}\n     */\n    endpoint;\n    /**\n     * @constructor\n     * @param {Object} props - Props for the constructor\n     * @property {string} endpoint - Endpoint to post data to sumo logic\n     */\n    constructor(props) {\n        super();\n        this.endpoint = props.endpoint;\n    }\n    /**\n     * Function to post data to sumo logic\n     * @param {string} message - Message to be posted to sumo logic\n     */\n    postToSumo(message) {\n        axios.post(this.endpoint, message, {\n            headers: { 'Content-Type': 'application/json' },\n        }).then(response => {\n            console.log(response.data);\n        });\n    }\n    /**\n     * @override\n     */\n    emit(record) {\n        const message = this.formatter.format(record);\n        this.postToSumo(message);\n    }\n}\nexport { ConsoleHandler, StreamHandler };\n//# sourceMappingURL=handler.js.map","import { BaseFormatter } from \"./base_classes\";\nclass BasicFormatter extends BaseFormatter {\n    /**\n     * @override\n     */\n    formatRecord(record) {\n        const m = `[${record.level}] ${record.getIsoFormatTime()} ${record.getMessage()}`;\n        return m.replace(/\\$\\{(\\S+)\\}/g, function (all) {\n            let token = all.slice(2, all.length - 1);\n            return record.extra[token] || all;\n        });\n    }\n}\nclass JSONFormatter extends BaseFormatter {\n    /**\n     * Function to check if the message is an Error or not\n     * @param {any} message - Message to check for Error instance\n     * @returns {boolean} True if the message is an Error instance, false otherwise\n     */\n    isError(message) {\n        if (message instanceof Error) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Function to Get the stack from message if it is an Error instance\n     * @param {RecordInterfaceType} record - Record Instance to get stack from\n     * @returns {string|undefined} Stack from the error instance if exists, otherwise undefined\n     */\n    getStack(record) {\n        const message = record.getMessage();\n        if (this.isError(message)) {\n            return message.stack;\n        }\n    }\n    /**\n     * Function to interpolateRecord if extra parameters are present\n     * @param {string} record - record to interpolate\n     * @param {object} extra - extra arguments to interpolate\n     * @returns {string} interpolated message\n     */\n    interpolateRecord(record, extra) {\n        return record.replace(/\\$\\{(\\S+)\\}/g, function (all) {\n            let token = all.slice(2, all.length - 1);\n            return extra[token] || all;\n        });\n    }\n    /**\n     * Function to format message from the record to log\n     * @param record - Log record\n     * @returns {string} formatted message\n     */\n    formatMessage(record) {\n        const message = record.getMessage();\n        let formattedMessage;\n        if (message instanceof Error) {\n            formattedMessage = `${message.message}`;\n        }\n        else {\n            formattedMessage = this.interpolateRecord(message, record.extra);\n        }\n        return formattedMessage;\n    }\n    /**\n     * @override\n     */\n    formatRecord(record) {\n        const fr = {\n            message: this.formatMessage(record),\n            timestamp: record.getIsoFormatTime(),\n            level: record.level,\n            context: record.extra,\n            user: record.extra?.user\n        };\n        if (this.isError(record.getMessage())) {\n            fr.stack_info = this.getStack(record);\n        }\n        return JSON.stringify(fr);\n    }\n}\nexport { BasicFormatter, JSONFormatter };\n//# sourceMappingURL=formatter.js.map","import { BasicFormatter } from './formatter';\nimport { ConsoleHandler } from './handler';\nimport { Logger } from './logger';\n/**\n * Function to get basic logger instance\n * This returns a console logger with basic logging\n * @returns {Logger} Logger instance\n */\nexport function get_basic_logger() {\n    const l = new Logger();\n    const h = new ConsoleHandler();\n    const f = new BasicFormatter();\n    h.setFormatter(f);\n    l.addHandler(h);\n    return l;\n}\n/**\n * Function to get custom logger instance\n * @param {CustomLoggerProps} props -  CustomLoggerProps object containing handlers, formatter and level\n * @param {Array<BaseHandler>} [props.handlers=[new ConsoleHandler()]] - List of handlers to add to logger\n * @param {BaseFormatter} [props.formatter=new BasicFormatter()] - Formatter to use for logging messages\n * @param {1|2|3|4|5} [props.level=1] - Log level to use for logging messages\n * @returns {Logger} Logger instance\n */\nexport function get_custom_logger(props) {\n    const { handlers = [new ConsoleHandler()], level = 1, formatter = new BasicFormatter() } = props;\n    const l = new Logger();\n    handlers.forEach(h => {\n        h.setLevel(level);\n        h.setFormatter(formatter);\n        l.addHandler(h);\n    });\n    return l;\n}\n//# sourceMappingURL=utils.js.map"],"names":["moment"],"mappings":"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"}